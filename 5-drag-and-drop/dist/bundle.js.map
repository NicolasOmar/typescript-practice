{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://5-drag-and-drop/./src/components/base-component.ts","webpack://5-drag-and-drop/./src/models/models.ts","webpack://5-drag-and-drop/./src/state/project-state.ts","webpack://5-drag-and-drop/./src/decorators/autobind.ts","webpack://5-drag-and-drop/./src/utils/validation.ts","webpack://5-drag-and-drop/./src/components/project-input.ts","webpack://5-drag-and-drop/./src/components/project-item.ts","webpack://5-drag-and-drop/./src/components/project-list.ts","webpack://5-drag-and-drop/./src/app.ts"],"sourcesContent":["export class Component {\r\n    constructor(templateId, hostElementId, insertAtStart, newElementId) {\r\n        this.templateElement = document.getElementById(templateId);\r\n        this.hostElement = document.getElementById(hostElementId);\r\n        const importedNode = document.importNode(this.templateElement.content, true);\r\n        this.element = importedNode.firstElementChild;\r\n        newElementId && (this.element.id = newElementId);\r\n        this.attach(insertAtStart);\r\n    }\r\n    attach(insertAtBeginning) {\r\n        this.hostElement.insertAdjacentElement(insertAtBeginning ? 'beforebegin' : 'afterbegin', this.element);\r\n    }\r\n}\r\n","export var ProjectStatus;\r\n(function (ProjectStatus) {\r\n    ProjectStatus[ProjectStatus[\"Active\"] = 0] = \"Active\";\r\n    ProjectStatus[ProjectStatus[\"Finished\"] = 1] = \"Finished\";\r\n})(ProjectStatus || (ProjectStatus = {}));\r\nexport class Project {\r\n    constructor(id, title, description, people, status) {\r\n        this.id = id;\r\n        this.title = title;\r\n        this.description = description;\r\n        this.people = people;\r\n        this.status = status;\r\n    }\r\n}\r\n","import { Project, ProjectStatus } from \"../models/models\";\r\nclass State {\r\n    constructor() {\r\n        this.listeners = [];\r\n    }\r\n    addListener(listenerFn) {\r\n        this.listeners = [...this.listeners, listenerFn];\r\n    }\r\n}\r\nclass ProjectState extends State {\r\n    constructor() {\r\n        super();\r\n        this.projects = [];\r\n    }\r\n    static getInstance() {\r\n        if (this.instance) {\r\n            return this.instance;\r\n        }\r\n        this.instance = new ProjectState();\r\n        return this.instance;\r\n    }\r\n    addProject(title, description, people) {\r\n        const newProject = new Project(Math.random().toString(), title, description, people, ProjectStatus.Active);\r\n        this.projects = [...this.projects, newProject];\r\n        this.updateListeners();\r\n    }\r\n    moveProject(projectId, newStatus) {\r\n        const _project = this.projects.find(_project => _project.id === projectId);\r\n        if (_project && _project.status !== newStatus) {\r\n            _project.status = newStatus;\r\n            this.updateListeners();\r\n        }\r\n    }\r\n    updateListeners() {\r\n        for (const listenerFn of this.listeners) {\r\n            listenerFn([...this.projects]);\r\n        }\r\n    }\r\n}\r\nexport const globalProjectState = ProjectState.getInstance();\r\n","export function AutoBind(_, __, descriptor) {\r\n    const originalMethod = descriptor.value;\r\n    const customDescriptor = {\r\n        configurable: true,\r\n        enumerable: false,\r\n        get() {\r\n            return originalMethod.bind(this);\r\n        }\r\n    };\r\n    return customDescriptor;\r\n}\r\n","export function validate(validatableInput) {\r\n    let isValid = true;\r\n    if (validatableInput.required) {\r\n        isValid = isValid && validatableInput.value.toLocaleString().trim().length != 0;\r\n    }\r\n    if (validatableInput.minLenght != null && typeof validatableInput.value === 'string') {\r\n        isValid = isValid && validatableInput.value.length > validatableInput.minLenght;\r\n    }\r\n    if (validatableInput.maxLenght != null && typeof validatableInput.value === 'string') {\r\n        isValid = isValid && validatableInput.value.length < validatableInput.maxLenght;\r\n    }\r\n    if (validatableInput.min != null && typeof validatableInput.value === 'number') {\r\n        isValid = isValid && validatableInput.value > validatableInput.min;\r\n    }\r\n    if (validatableInput.max != null && typeof validatableInput.value === 'number') {\r\n        isValid = isValid && validatableInput.value < validatableInput.max;\r\n    }\r\n    return isValid;\r\n}\r\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { Component } from \"./base-component\";\r\nimport { globalProjectState } from \"../state/project-state\";\r\nimport { AutoBind } from \"../decorators/autobind\";\r\nimport { validate } from \"../utils/validation\";\r\nexport class ProjectInput extends Component {\r\n    constructor() {\r\n        super('project-input', 'app', true, 'user-input');\r\n        this.templateElement = document.getElementById('project-input');\r\n        this.hostElement = document.getElementById('app');\r\n        this.titleInputElement = this.element.querySelector('#title');\r\n        this.descriptionInputElement = this.element.querySelector('#description');\r\n        this.peopleInputElement = this.element.querySelector('#people');\r\n        this.configure();\r\n    }\r\n    submitHandler(event) {\r\n        event.preventDefault();\r\n        const userInputs = this.gatherUserInput();\r\n        if (Array.isArray(userInputs)) {\r\n            globalProjectState.addProject(...userInputs);\r\n            this.clearInputs();\r\n        }\r\n    }\r\n    configure() {\r\n        this.element.addEventListener('submit', this.submitHandler);\r\n    }\r\n    renderContent() { }\r\n    gatherUserInput() {\r\n        const title = this.titleInputElement.value;\r\n        const description = this.descriptionInputElement.value;\r\n        const people = this.peopleInputElement.value;\r\n        const titleValidator = {\r\n            value: title,\r\n            required: true\r\n        };\r\n        const descriptionValidator = {\r\n            value: description,\r\n            required: true\r\n        };\r\n        const peopleValidator = {\r\n            value: people,\r\n            required: true,\r\n            min: 0\r\n        };\r\n        if (validate(titleValidator) &&\r\n            validate(descriptionValidator) &&\r\n            validate(peopleValidator)) {\r\n            return [title, description, +people];\r\n        }\r\n        else {\r\n            alert('Invalid inputs, please try again');\r\n        }\r\n    }\r\n    clearInputs() {\r\n        this.titleInputElement.value = '';\r\n        this.descriptionInputElement.value = '';\r\n        this.peopleInputElement.value = '';\r\n    }\r\n}\r\n__decorate([\r\n    AutoBind\r\n], ProjectInput.prototype, \"submitHandler\", null);\r\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { Component } from \"./base-component\";\r\nimport { AutoBind } from \"../decorators/autobind\";\r\nexport class ProjectItem extends Component {\r\n    get persons() {\r\n        const _people = this.project.people;\r\n        return `${_people} ${_people === 1 ? 'person' : 'persons'}`;\r\n    }\r\n    constructor(hostId, _project) {\r\n        super('single-project', hostId, false, _project.id);\r\n        this.project = _project;\r\n        this.configure();\r\n        this.renderContent();\r\n    }\r\n    configure() {\r\n        this.element.addEventListener('dragstart', this.dragStartHandler);\r\n        this.element.addEventListener('dragleave', this.dragEndHandler);\r\n    }\r\n    renderContent() {\r\n        this.element.querySelector('h2').textContent = this.project.title;\r\n        this.element.querySelector('h3').textContent = `${this.persons} assigned`;\r\n        this.element.querySelector('p').textContent = this.project.description;\r\n    }\r\n    dragStartHandler(event) {\r\n        event.dataTransfer.setData('text/plain', this.project.id);\r\n        event.dataTransfer.effectAllowed = 'move';\r\n    }\r\n    dragEndHandler(_) { }\r\n}\r\n__decorate([\r\n    AutoBind\r\n], ProjectItem.prototype, \"dragStartHandler\", null);\r\n__decorate([\r\n    AutoBind\r\n], ProjectItem.prototype, \"dragEndHandler\", null);\r\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { Component } from \"./base-component\";\r\nimport { ProjectItem } from \"./project-item\";\r\nimport { ProjectStatus } from \"../models/models\";\r\nimport { globalProjectState } from \"../state/project-state\";\r\nimport { AutoBind } from \"../decorators/autobind\";\r\nexport class ProjectList extends Component {\r\n    constructor(type) {\r\n        super('project-list', 'app', false, `${type}-projects`);\r\n        this.type = type;\r\n        this.assignedProjects = [];\r\n        this.configure();\r\n        this.renderContent();\r\n    }\r\n    configure() {\r\n        this.element.addEventListener('dragover', this.dragOverHandler);\r\n        this.element.addEventListener('dragleave', this.dragLeaveHandler);\r\n        this.element.addEventListener('drop', this.dropHandler);\r\n        globalProjectState.addListener((projects) => {\r\n            this.assignedProjects = projects.filter(_project => {\r\n                return this.type === 'active'\r\n                    ? _project.status === ProjectStatus.Active\r\n                    : _project.status === ProjectStatus.Finished;\r\n            });\r\n            this.renderProjects();\r\n        });\r\n    }\r\n    dragOverHandler(event) {\r\n        if (event.dataTransfer && event.dataTransfer.types[0] === 'text/plain') {\r\n            event.preventDefault();\r\n            const listElem = this.element.querySelector('ul');\r\n            listElem.classList.add('droppable');\r\n        }\r\n    }\r\n    dropHandler(event) {\r\n        const projectId = event.dataTransfer.getData('text/plain');\r\n        globalProjectState.moveProject(projectId, this.type === 'active' ? ProjectStatus.Active : ProjectStatus.Finished);\r\n    }\r\n    dragLeaveHandler(_) {\r\n        const listElem = this.element.querySelector('ul');\r\n        listElem.classList.remove('droppable');\r\n    }\r\n    renderContent() {\r\n        this.element.querySelector('ul').id = `${this.type}-projects-list`;\r\n        this.element.querySelector('h2').textContent = `${this.type.toLocaleUpperCase()} PROJECTS`;\r\n    }\r\n    renderProjects() {\r\n        const listElem = document.getElementById(`${this.type}-projects-list`);\r\n        listElem.innerHTML = '';\r\n        for (const projectItem of this.assignedProjects) {\r\n            new ProjectItem(this.element.querySelector('ul').id, projectItem);\r\n        }\r\n    }\r\n}\r\n__decorate([\r\n    AutoBind\r\n], ProjectList.prototype, \"dragOverHandler\", null);\r\n__decorate([\r\n    AutoBind\r\n], ProjectList.prototype, \"dropHandler\", null);\r\n__decorate([\r\n    AutoBind\r\n], ProjectList.prototype, \"dragLeaveHandler\", null);\r\n","import { ProjectInput } from \"./components/project-input\";\r\nimport { ProjectList } from \"./components/project-list\";\r\nnew ProjectInput();\r\nnew ProjectList('active');\r\nnew ProjectList('finished');\r\n"],"names":["Component","constructor","templateId","hostElementId","insertAtStart","newElementId","this","templateElement","document","getElementById","hostElement","importedNode","importNode","content","element","firstElementChild","id","attach","insertAtBeginning","insertAdjacentElement","ProjectStatus","Project","title","description","people","status","State","listeners","addListener","listenerFn","ProjectState","super","projects","static","instance","addProject","newProject","Math","random","toString","Active","updateListeners","moveProject","projectId","newStatus","_project","find","globalProjectState","getInstance","AutoBind","_","__","descriptor","originalMethod","value","configurable","enumerable","get","bind","validate","validatableInput","isValid","required","toLocaleString","trim","length","minLenght","maxLenght","min","max","ProjectInput","titleInputElement","querySelector","descriptionInputElement","peopleInputElement","configure","submitHandler","event","preventDefault","userInputs","gatherUserInput","Array","isArray","clearInputs","addEventListener","renderContent","descriptionValidator","peopleValidator","alert","decorators","target","key","desc","d","c","arguments","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__decorate","prototype","ProjectItem","persons","_people","project","hostId","dragStartHandler","dragEndHandler","textContent","dataTransfer","setData","effectAllowed","ProjectList","type","assignedProjects","dragOverHandler","dragLeaveHandler","dropHandler","filter","Finished","renderProjects","types","classList","add","getData","remove","toLocaleUpperCase","innerHTML","projectItem"],"sourceRoot":""}